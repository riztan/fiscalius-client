/* vta_factura.xbs
 *
 */

#include "tpy_xbs.ch"

procedure vta_facturas( oFormParent )

   local oForm, cEntCli

   SET PUBLIC oForm

   if !oTpuy:RunXBS("netio_check")
      MsgStop("Problemas para continuar...")
   endif

   ::lConfirm := .T.

   ::rVentas := oFormParent:oGEmpresa:SetModulo("Ventas")
   ::rFacturas := ::rVentas:Facturas()

   if hb_isNIL( ::rFacturas )
      MsgStop( "no se puede obtener información de facturas" )
      Return 
   endif

   SET RESOURCES ::oRes FROM FILE oTPuy:cResources+"vta_facturas.ui"

   DEFINE WINDOW ::oFacWnd ;
          TITLE "Fiscalius. Factura" ;
          SIZE 1000,600 ;
          ID "window1" RESOURCE ::oRes

   DEFINE IMAGE ::oImgBanner ;
          FILE oTPuy:cImages+"banner_02.png" ;
          ID "image1" RESOURCE ::oRes
          ::oImgBanner:Adjust(900)

   DEFINE IMAGE ::oImgLogo ;
          FILE oTPuy:cImages+"fiscalius_logo_02.png";
          ID "image2" RESOURCE ::oRes
          ::oImgLogo:Adjust(60)

   DEFINE BUTTON ::oBtnGuardar ;
          ACTION oTPuy:RunXBS("mae_inventario", oFormParent, ::oFacWnd, ::oEntCli, @::cCodCli) ;
          ID "btn_guardar" RESOURCE ::oRes


   DEFINE BOX ::oBoxData ID "boxdata" RESOURCE ::oRes

   DEFINE BOX ::oBoxFactura ID "vbox_factura" RESOURCE ::oRes
          ::oBoxFactura:Hide()

   DEFINE BUTTON ::oBtn ACTION __vtaFactura( oForm, oFormParent, ::oBoxFactura, ::oModFacturas, .T.  ) ;
          ID "btn_add" RESOURCE ::oRes
   //::oLBoxFacs:bEdit := {|oModel| __vtaFactura( oForm, oFormParent, ::oBoxFactura, oModel, .F. ) }

   //-------------------------
   DEFINE LABEL ::oLabNumero ID "lab_numero" RESOURCE ::oRes

   ::cEntCli := ""
   ::cCodCli := ""
   DEFINE ENTRY  ::oEntCli VAR ::cEntCli ;
          ACTION oTPuy:RunXBS("vta_clientes", oFormParent, ::oFacWnd, ::oEntCli, @::cCodCli) ;
          VALID  .T. ;
          ID "ent_clientes" RESOURCE ::oRes

   ::dFecha := DATE()
   DEFINE ENTRY TYPE DATE ::oEntFecha VAR ::dFecha CALENDAR ;
          VALID __FactValFecha( oForm ) ;
          ID "ent_fecha" RESOURCE ::oRes

   ::dVcmto := DATE()
   DEFINE ENTRY TYPE DATE ::oEntVcmto VAR ::dVcmto CALENDAR ;
          VALID __FactValFecha( oForm ) ;
          ID "ent_vcmto" RESOURCE ::oRes

   DEFINE BOX ::oBoxCondicion ID "box_condicion" RESOURCE ::oRes

   ::aCondiciones := {"Contado", "Crédito"}
   ::cCondicion := ""
   DEFINE COMBOBOX ::oComboCondicion ;
          VAR ::cCondicion ITEMS ::aCondiciones ;
          ON CHANGE MsgInfo("condicion") ;
          OF ::oBoxCondicion

   DEFINE BOX ::oBoxEstado ID "box_estado" RESOURCE ::oRes

   ::aComboEstado := {"Borrador","Anulada","Cerrada"}
   ::cComboEstado := ""
   DEFINE COMBOBOX ::oComboEstado ;
          VAR ::cComboEstado ITEMS ::aComboEstado ;
          ON CHANGE ( __ChangeEstado( oForm, ::lConfirm ) ) ;
          OF ::oBoxEstado

   //-- Detalles de la factura
   DEFINE BOX ::oBoxDetalles ID "box_detalles" RESOURCE ::oRes

   DEFINE BUTTON ::oBtnDetalAdd ;
          ACTION EVAL( ::oLBoxDetal:bNew ) ;
          ID "btn_detal_add" RESOURCE ::oRes

   DEFINE BUTTON ::oBtnDetalEdit ;
          ACTION EVAL( ::oLBoxDetal:bEdit ) ;
          ID "btn_detal_edit" RESOURCE ::oRes

   DEFINE BUTTON ::oBtnDetalDel ;
          ACTION EVAL( ::oLBoxDetal:bDel ) ;
          ID "btn_detal_cancelar" RESOURCE ::oRes

          
   // -- Caja de Montos
   DEFINE BOX ::oBoxMontos ID "box_montos" RESOURCE ::oRes

   DEFINE BOX ::oBoxMonBase HOMO OF ::oBoxMontos

   ::nMontoBase := 0
   DEFINE MONEY ENTRY ::oEntMonBase VAR ::nMontoBase ;
          ID "ent_monbase" RESOURCE ::oRes 
   ::oEntMonBase:Justify( GTK_JUSTIFY_RIGHT )

   ::nMontoIvaE := 0
   DEFINE MONEY ENTRY ::oEntIvaE VAR ::nMontoIvaE ;
          ID "ent_exento" RESOURCE ::oRes 
   ::oEntIvaE:Justify( GTK_JUSTIFY_RIGHT )

   ::nMontoIvaR := 0
   DEFINE MONEY ENTRY ::oEntIvaR VAR ::nMontoIvaR ;
          ID "ent_ivared" RESOURCE ::oRes 
   ::oEntIvaR:Justify( GTK_JUSTIFY_RIGHT )

   ::nMontoIvaG := 0
   DEFINE MONEY ENTRY ::oEntIvaG VAR ::nMontoIvaG ;
          ID "ent_ivagen" RESOURCE ::oRes 
   ::oEntIvaG:Justify( GTK_JUSTIFY_RIGHT )

   ::nMontoTotal := 0
   DEFINE MONEY ENTRY ::oEntTotal VAR ::nMontoTotal ;
          ID "ent_montotal" RESOURCE ::oRes 
   ::oEntTotal:Justify( GTK_JUSTIFY_RIGHT )
   ::oEntTotal:SetEditable( .F. )


   // -- Caja de Retenciones
   DEFINE BOX ::oBoxRet ID "box_retiva" RESOURCE ::oRes

   ::cRetIva := "202503100123"
   DEFINE DOCUMENT ENTRY ::oEntRetIva VAR ::cRetIva ;
          ID "ent_retivanum" RESOURCE ::oRes
   ::oRetIvaFecha := DATE()
   DEFINE DATE ENTRY ::oEntRetIvaF VAR ::dRetIvaFecha ;
          ID "ent_retivaf" RESOURCE ::oRes

   //-------------------------
   DEFINE MODEL  ::oModFacturas ;
          STRUCT ::rFacturas:Struct() ;
          DATA   ::rFacturas:GetData()
   
   DEFINE LISTBOX ::oLBoxFacs ;
          MODEL   ::oModFacturas ;
          OF      ::oBoxData

   ::oLBoxFacs:lBar  := .f.
   ::oLBoxFacs:bEdit := {|oModel| __vtaFactura( oForm, oFormParent, ::oBoxFactura, oModel, .F. ) }

   ::oLBoxFacs:Active() 

   //View( oLBoxFacs:GetCol(1):ClassName() )
   ::oLBoxFacs:SetColVisible( 2, .f. )         //- Ocultamos el id del cliente.

   ::oLBoxFacs:SetColTitle( 3, "Cliente" )          //- Cambiamos el titulo 

   ::oLBoxFacs:SetColTitle( 5, "fecha de vcmto." )  //- Cambiamos el titulo 
   ::oLBoxFacs:SetColTitle( 6, "monto base" )       //- Cambiamos el titulo 

   //::oLBoxFacs:HeadersVisible( .f. )  //- Muestra u Oculta titulos de columnas

   //-- Botones varios.
   DEFINE BUTTON ::oBtnSalir ACTION ::oFacWnd:End();
          ID "btn_salir" RESOURCE ::oRes

   ACTIVATE WINDOW ::oFacWnd MODAL VALID __FactExit(oForm)

return


function __FactExit(oForm)
   if MsgNoYes("¿Realmente desea salir?")
      oForm:Release()
      return .T.
   endif
return .F.


function __FactValFecha( oForm )
   local lRes := .t.

   if CTOD( ::oEntVcmto:getValue() ) < CTOD( ::oEntFecha:getValue() )
      MsgAlert( "La fecha indicada es incorrecta. Por favor revise." )
      lRes := .F.
   endif
   //DEFINE ENTRY TYPE DATE ::oEntVcmto VAR ::dVcmto CALENDAR ;

return lRes


procedure __ChangeEstado( oForm, lConfirm )
   if ::cComboEstado = "Anulada" .or. ;
      ::cComboEstado = "Cerrada"
      __FactRefresh( oForm, lConfirm )
   else
      __FactRefresh( oForm, !lConfirm )
   endif
return



//-- Este procedimiento se ejecuta al solicitar una factura nueva o seleccionar 
//   una factura para consultar y/o editar.
procedure __vtaFactura( oForm, oFormParent, oBoxFactura, oModel, lNew )

   local lPreConfirm := ::lConfirm
   local aData, aLine, bCode
   local hMontos := hb_hash()

   default lNew := .T.

   if lNew 
      ::lLoad      := .F.
      ::lSave      := .F.
      ::rFactura   := ::rVentas:Factura('')
      ::hFactura   := ::rFactura:Data()
      ::rFactDetal := ::rFactura:Detal()

      ::oLabNumero:SetValue( "" )
      ::oEntCli:SetValue( "" )
      ::oEntFecha:SetValue( DTOC(DATE()) )
      ::oEntVcmto:SetValue( DTOC(DATE()) )

      ::oEntIvaE:SetValue( "0" )
      ::oEntIvaR:SetValue( "0" )
      ::oEntIvaG:SetValue( "0" )
      ::oEntMonBase:SetValue( "0" )

      ::oComboEstado:SetValue("Borrador", .F. ) 
      ::cComboEstado := "B"
   
      ::oEntTotal:SetValue( "0" )
      ::oEntRetIva:SetValue( "" )

      if hb_isObject( ::oModDetal ) 
         ::oModDetal:oTreeView:ClearModel(.t.)
      endif

   else
      ::lLoad      := .T. // Consultando el documento.
      ::lSave      := .F.
      ::rFactura   := ::rVentas:Factura( oModel:GetCol("numero") )
      ::hFactura   := ::rFactura:Data()
      ::rFactDetal := ::rFactura:Detal()

      ::oLabNumero:SetValue( oModel:GetCol("numero") )
      ::oEntCli:SetValue( oModel:GetCol("Cliente") )
      ::oEntFecha:SetValue( oModel:GetCol("fecha") )
      ::oEntVcmto:SetValue( oModel:GetCol(5) )
      ::oEntMonBase:SetValue( oModel:GetCol("monto base") )

      ::lConfirm := .F.
      do case
      case ::hFactura["estado"] = "B"
         ::oComboEstado:SetValue( "Borrador" )
      case ::hFactura["estado"] = "A"
         ::oComboEstado:SetValue( "Anulada"  )
      case ::hFactura["estado"] = "C"
         ::oComboEstado:SetValue( "Cerrada"  )
      endcase
      ::lConfirm := lPreconfirm

      ::oEntTotal:SetValue( ::oEntMonBase:GetValue() )

   endif

   if !hb_isObject( ::oModDetal )

      if !hb_isNIL( ::rFactDetal )

         DEFINE MODEL   ::oModDetal           ;
                STRUCT  ::rFactDetal:Struct() ;
                DATA    ::rFactDetal:GetData()
      else

         DEFINE MODEL   ::oModDetal           ;
                STRUCT  {{"detalle_id",     "N",10, 0},;
                         {"documento" ,     "N",10, 0},;
                         {"codigo_local",   "C",10, 0},;
                         {"descripcion",    "C",100,0},;
                         {"cantidad",       "N",10, 0},;
                         {"precio_unitario","N",10, 2},;
                         {"descuento",      "N",10, 2},;
                         {"subtotal",       "N",10, 2},;
                         {"iva_porcentaje", "N",04, 2},;
                         {"iva_monto",      "N",04, 2},;
                         {"total",          "N",10, 2},;
                         {"nombre_global",  "C",100,0},;
                         {"tipo_inventario","C",01, 0},;
                         {"lote",           "C",10, 0},;
                         {"fecha_vcmto",    "D",10, 0},;
                         {"id_ubicacion",   "N",10, 0},;
                         {"almacen_id",     "N",10, 0},;
                         {"nombre_almacen", "C",20, 0},;
                         {"detalles_json",  "C",100, 0} ;
                        } ;
                DATA    {{0,0,'','',0,0,0,0,0,0,0,'','','',date(),0,0,'',''}}

      endif

      DEFINE LISTBOX ::oLBoxDetal ;
             MODEL   ::oModDetal  ;
             OF      ::oBoxDetalles

      ::oLBoxDetal:lBar  := .f.
      ::oLBoxDetal:bEdit := {|| View("por aqui vamos...") }

      ::oLBoxDetal:SetColVisible( 01, .f. )     //- Ocultamos el id del detalle.
      ::oLBoxDetal:SetColVisible( 02, .f. )     //- Ocultamos el id del documento.

      ::oLBoxDetal:SetColVisible( 12, .f. )     //- Nombre Globak
      ::oLBoxDetal:SetColVisible( 13, .f. )     //- Tipo de Inventario
      ::oLBoxDetal:SetColVisible( 14, .f. )     //- Lote
      ::oLBoxDetal:SetColVisible( 15, .f. )     //- Vencimiento
      ::oLBoxDetal:SetColVisible( 16, .f. )     //- Ubicación
      ::oLBoxDetal:SetColVisible( 17, .f. )     //- Almacen Id
      ::oLBoxDetal:SetColVisible( 18, .f. )     //- Almacen Nombre
      ::oLBoxDetal:SetColVisible( 19, .f. )     //- Detalles (JSON)

      ::oLBoxDetal:SetColTitle( 03, "Código" )        //-- Columna Código
      ::oLBoxDetal:SetColTitle( 04, "Descripción" )   //-- Columna Descripción
      ::oLBoxDetal:SetColTitle( 05, "Cantidad" )      //-- Columna Cantidad
      ::oLBoxDetal:SetColTitle( 06, "Precio" )        //-- Columna Precio Unitario
      ::oLBoxDetal:SetColTitle( 07, "Descuento" )     //-- Columna Descuento
      ::oLBoxDetal:SetColTitle( 08, "SubTotal" )      //-- Columna SubTotal
      ::oLBoxDetal:SetColTitle( 09, "IVA (%)" )       //-- Columna IVA Porcentaje
      ::oLBoxDetal:SetColTitle( 10, "IVA (Monto)" )   //-- Columna IVA Monto
      ::oLBoxDetal:SetColTitle( 11, "Total" )         //-- Columna Total

      ::oLBoxDetal:Active()

      if hb_isNIL( ::rFactDetal )
         ::oModDetal:oTreeView:ClearModel(.t.)
      endif
   else
 
      ::oModDetal:oTreeView:ClearModel(.t.)
      aData := ::rFactDetal:GetData()

      if !Empty( aData )

         FOR EACH aLine IN aData
   
            APPEND LIST_STORE ::oModDetal:oLbx ITER aIter ;
                   VALUES hb_ntos(aLine[1]), hb_ntos(aLine[2]), aLine[3], ;
                          aLine[4], hb_ntos(aLine[5]),;
                          hb_ntos(aLine[6]),  hb_ntos(aLine[7]), ;
                          hb_ntos(aLine[8]),  hb_ntos(aLine[9]), ; 
                          hb_ntos(aLine[10]), hb_ntos(aLine[11]),; 
                          hb_ntos(aLine[12]), aLine[13], ;
                          aLine[14], aLine[15], ;
                          aLine[16], hb_ntos(aLine[17]), aLine[18], aLine[19]

         NEXT

      endif

   endif


   ::oEntMonBase:SetValue("0")
   bCode := {|oTView, pModel, aIter| __CalMontos( oTView, pModel, aIter, oForm ) }
   ::oLBoxDetal:ForEach( bCode )

      //::oEntMonBase:SetValue( "0" )
   __FactRefresh( oForm, .F. )

//View( ::hFactura )

   oBoxFactura:Show()

return



procedure __CalMontos( oTView, pModel, aIter, oForm )
   local nBase, nMonto, nTotal

   nMonto := ToNum( oTView:GetAutoValue( 8, aIter ) )
   nBase  := ToNum( ::oEntMonBase:GetValue() )
   nTotal := ROUND( nBase+nMonto, 2 )
   ::oEntMonBase:SetValue( TRANSFORM( nTotal, P_92 ) )

   if ToNum( oTView:GetAutoValue( 9, aIter )) = 16  // <-- ToDo: Usar Datos de IVA
      nMonto := ToNum( oTView:GetAutoValue( 10, aIter ) )
      nBase  := ToNum( ::oEntIvaG:GetValue() )
      nTotal := ROUND( nBase+nMonto, 2 )
      ::oEntIvaG:SetValue( TRANSFORM( nTotal, P_92 ) )
   endif

   nTotal := ROUND( ToNum( ::oEntMonBase:GetValue() ) +;
             ToNum( ::oEntIvaE:GetValue() ) +;
             ToNum( ::oEntIvaR:GetValue() ) +;
             ToNum( ::oEntIvaG:GetValue() ), 2 ) 
            
   ::oEntTotal:SetValue( TRANSFORM( nTotal, P_92 ) ) 

return



procedure __FactRefresh( oForm, lConfirm )

   default lConfirm := .F.

   if lConfirm
      if !MsgNoYes( "¿Confirma el cambio de estado de la factura?" )
         ::oComboEstado:setValue("Borrador")
      endif
   endif

   ::oEntIvaE:SetEditable( .F. )
   ::oEntIvaR:SetEditable( .F. )
   ::oEntIvaG:SetEditable( .F. )
   ::oEntMonBase:SetEditable( .F. )

   if (::hFactura["estado"] = "A" .or. ::hFactura["estado"] = "C") .or. ;
      ( ::cComboEstado = "A" .or. ::cComboEstado = "C" )
      ::oEntCli:Disable()
      ::oEntFecha:Disable()
      ::oEntVcmto:Disable()
      if ::lSave .or. ::lLoad
         ::oComboEstado:Disable()
      //else
      //   ::oComboEstado:Disable()
      endif
   else
      ::oEntCli:Enable()
      ::oEntFecha:Enable()
      ::oEntVcmto:Enable()
      if !::lSave
         ::oComboEstado:Enable()
      //else
      //   ::oComboEstado:Enable()
      endif
   endif

return


//eof
