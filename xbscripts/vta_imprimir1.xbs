/* 
 * Proyecto TPuy
 * dplibvta_xlsx: Genera archivo de excel a partir del modelo dado.
 *
 * Author: riztan at gmail dot com
 */


#include "tpy_xbs.ch"
#include "hbxlsxwriter.ch"

function Column( cCol )
   hCol := { "A"=>0,  "B"=>1,  "C"=>2,  "D"=>3,  "E"=>4,  "F"=>5,  "G"=>6,  "H"=>7,  ;
             "I"=>8,  "J"=>9,  "K"=>10, "L"=>11, "M"=>12, "N"=>13, "O"=>14, "P"=>15, ;
             "Q"=>16, "R"=>17, "S"=>18, "T"=>19, "U"=>20, "V"=>21, "W"=>22, "X"=>23, ;
             "Y"=>24, "Z"=>25 ;
           }
return hCol[cCol]

#xcommand xlsx_set_string <worksheet> cell: <cell> value: <title> [format: <format>] ;
      =>  worksheet_write_string( <worksheet>, CELL(<cell>), <title>[, <format>] )

#xcommand xlsx_merge_range <worksheet> from: <cell_from> to: <cell_to> value: <title> [format: <format>] ;
      =>  worksheet_merge_range( <worksheet>, CELL(<cell_from>), CELL(<cell_to>), <title>[, <format>] ) 


#define P_92  "@E 999,999,999,999,999,999,999.99"


function STRRANGE( cCol1, nLin1, cCol2, nLin2 )
   local cRange := "{COL1}{LIN1}:{COL2}{LIN2}"
   cRange := STRTRAN( cRange, "{COL1}", cCol1 )
   cRange := STRTRAN( cRange, "{LIN1}", hb_ntos(nLin1) )
   cRange := STRTRAN( cRange, "{COL2}", cCol2 )
   cRange := STRTRAN( cRange, "{LIN2}", hb_ntos(nLin2) )
return cRange


procedure vta_imprimir( oForm, oQry )

   local i, nLin, nOpera:=1, cFileHeader, error, cFormula := "", cRange := ""
   local hTotal, dDesde := DATE() //::oCalDesde:GetDate()
   local aData := ::rFactDetal:GetData(), aLine
   local hParam:=hb_hash()
   local rClientes:=::rVentas:Clientes({"filtro" => ::cEntCli})
   local aClientes:=rClientes:Data()
  

   SET DECIMAL TO 2

   SET PUBLIC hTotal

   ::workbook := workbook_new( "tmp/vta_documento.xlsx" )

   ::worksheet := workbook_add_worksheet( ::workbook, "Datos" )
   worksheet_gridlines( ::worksheet, 0 )
//--------------------------------
   ::format_title0 := workbook_add_format( ::workbook )
   ::format_title1 := workbook_add_format( ::workbook )
   ::format_title2 := workbook_add_format( ::workbook )

   format_set_bold( ::format_title1)
   format_set_bold( ::format_title2)


   // Titulos Generales
  // xlsx_set_string ::worksheet cell: "A1" value: "Nombre de la Empresa"  format: ::format_title1
  // xlsx_set_string ::worksheet cell: "A2" value: "RIF:  J-123456789 " 
   xlsx_set_string ::worksheet cell: "L2" value: "FACTURA:  " + STRZERO( VAL(::hFactura[ "numero" ]), 10 )
   xlsx_set_string ::worksheet cell: "L3" value: "FECHA:  " + DTOC( ::hFactura[ "fecha" ] )
   xlsx_set_string ::worksheet cell: "L4" value: "VENCIMIENTO:  " + DTOC( ::hFactura[ "fecha_vencimiento" ] )
   xlsx_set_string ::worksheet cell: "B5" value: "NOMBRE O RAZÓN SOCIAL: "+::cEntCli
   xlsx_set_string ::worksheet cell: "G5" value: "RIF: "+aClientes[1,4]
   xlsx_set_string ::worksheet cell: "B6" value: "Orden de Compra: " +::hFactura["orden_compra"]
   xlsx_set_string ::worksheet cell: "G6" value: "TELEFONOS: "+aClientes[1,6]
   xlsx_set_string ::worksheet cell: "B7" value: "Dirección Fiscal: "+aClientes[1,5]
                                           
   //View( ::hFactura ) 
   //view(::rFactura:Data())
  //View(AClientes[1])
  // view(rClientes:Data())   
     
   //View(::rFactDetal:GetData()) 
/*
                STRUCT  {{"detalle_id",     "N",10, 0},;
                         {"documento" ,     "N",10, 0},;
                         {"codigo_local",   "C",10, 0},;
                         {"descripcion",    "C",100,0},;
                         {"cantidad",       "N",10, 0},;
                         {"precio_unitario","N",13, 2},;
                         {"descuento",      "N",13, 2},;
                         {"subtotal",       "N",13, 2},;
                         {"iva_porcentaje", "N",04, 2},;
                         {"iva_monto",      "N",04, 2},;
                         {"total",          "N",13, 2},;
                         {"nombre_global",  "C",100,0},;
                         {"tipo_inventario","C",01, 0},;
                         {"lote",           "C",10, 0},;
                         {"fecha_vcmto",    "D",10, 0},;
                         {"id_ubicacion",   "N",10, 0},;
                         {"almacen_id",     "N",10, 0},;
                         {"nombre_almacen", "C",20, 0},;
                         {"detalles_json",  "C",100,0},;
                         {"item",           "N",10, 0} ;
*/
   nLin := 9

   xlsx_set_string ::worksheet cell: "B"+hb_ntos(nLin) value: "Código"
   xlsx_set_string ::worksheet cell: "D"+hb_ntos(nLin) value: "Descripción"
   xlsx_set_string ::worksheet cell: "I"+hb_ntos(nLin) value: "Cantidad"
   xlsx_set_string ::worksheet cell: "K"+hb_ntos(nLin) value: "Precio Unit."
   xlsx_set_string ::worksheet cell: "M"+hb_ntos(nLin) value: "Precio Total."
   
   
   

   FOR EACH aLine IN aData
      xlsx_set_string ::worksheet cell: "B"+hb_ntos(aLine:__EnumIndex()+nLin) value: ALLTRIM(aLine[3])
      xlsx_set_string ::worksheet cell: "D"+hb_ntos(aLine:__EnumIndex()+nLin) value: ALLTRIM(aLine[4])
      xlsx_set_string ::worksheet cell: "I"+hb_ntos(aLine:__EnumIndex()+nLin) value: hb_ntos(aLine[5])
      xlsx_set_string ::worksheet cell: "K"+hb_ntos(aLine:__EnumIndex()+nLin) value: hb_ntos(aLine[6])
	  xlsx_set_string ::worksheet cell: "M"+hb_ntos(aLine:__EnumIndex()+nLin) value: hb_ntos(aLine[8])
	  
	  
	  
	        

   NEXT

   // xlsx_set_string ::worksheet cell: "M"+hb_ntos(nLin) value: TRANSFORM(::hFactura["monto_base"],P_92)
   
	xlsx_set_string ::worksheet cell: "K20" value: "Monto Base:    " 
    xlsx_set_string ::worksheet cell: "M20" value: TRANSFORM(::hFactura["monto_base"],P_92)
	xlsx_set_string ::worksheet cell: "K21" value: "Monto Exento:  " 
	xlsx_set_string ::worksheet cell: "M21" value: ::nMontoIvaE
	xlsx_set_string ::worksheet cell: "K22" value: "IVA 8%:        "
	xlsx_set_string ::worksheet cell: "M22" value: ::nMontoIvaR
	xlsx_set_string ::worksheet cell: "K23" value: "IVA 16%:       "
	xlsx_set_string ::worksheet cell: "M23" value: ::nMontoIvaG
	xlsx_set_string ::worksheet cell: "K24" value: "Monto Total:   " 
	xlsx_set_string ::worksheet cell: "M24" value:  TRANSFORM(::hFactura["monto_total"],P_92)
	xlsx_set_string ::worksheet cell: "H25" value: "IGTF 3% sobre "
	xlsx_set_string ::worksheet cell: "J25" value: "0,00 "
	xlsx_set_string ::worksheet cell: "K25" value: "Monto IGTF "
	xlsx_set_string ::worksheet cell: "M25" value: "0,00 "
//--------------------------------
   /* finalizamos */
   error := workbook_close( ::workbook )

   /* Check if there was any error creating the xlsx file. */
   IF error > 0
      Alert( "Error en workbook_close(). " + hb_eol() + ;
         "Error " + AllTrim( Str( error ) ) + " = " + lxw_strerror( error ) )

   ENDIF

  //workbook_open( "tmp/vta_documento.xlsx" )
   View("Finalizado...")
return

//eof
