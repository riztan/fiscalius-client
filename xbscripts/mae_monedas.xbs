/* mae_monedas.xbs
 *
 */

#include "tpy_xbs.ch"

procedure mae_monedas( oParentForm, oWndParent, oEntParent )

   local oMonWnd, oRes, oImgBanner, oImageLogo, oBoxData
   local oBoxBotones, oBtnNewMon
   local oLabTitulo, cLabTitulo := "Monedas"
   local cTipo,dFecha,nPorcentaje:=0
   local oModMonedas, oLBoxMon, oForm

   SET PUBLIC oForm

   ::rMonedas    := oParentForm:oGEmpresa:Monedas()  
   ::oParentForm := oParentForm

   if hb_isNIL(::rMonedas)
      MsgStop("No Hay Monedas registradas")
      return
   endif

   SET RESOURCES oRes FROM FILE oTPuy:cResources+"vta_listbox.ui"
   
   DEFINE WINDOW oMonWnd ;
          TITLE "Fiscalius. Monedas" ;
          SIZE 700,400 ;
          ID "window1" RESOURCE oRes

   DEFINE LABEL oLabTitulo TEXT cLabTitulo ;
          ID "lab_title" RESOURCE oRes

   DEFINE IMAGE oImgBanner ;
          FILE oTPuy:cImages+"banner_02.png"; 
          ID "image1" RESOURCE oRes
          oImgBanner:Adjust(900)

   DEFINE IMAGE oImgLogo ;
          FILE oTPuy:cImages+"fiscalius_logo_02.png";
          ID "image2" RESOURCE oRes
          oImgLogo:Adjust(60)

   DEFINE BOX oBoxData ID "boxdata" RESOURCE oRes

   DEFINE BOX oBoxBotones ID "box_botones" RESOURCE oRes
   
   DEFINE BUTTON oBtnNewMon TEXT "+ Nueva" ;
          ACTION __BtnNewMon( oForm, oModMonedas, oLBoxMon ) ;
          OF oBoxBotones 

   //DEFINE BUTTON ::oBtn ACTION __vtaAlicuotaIVA( oForm, oFormParent, ::oBoxData, ::oModMonedas, .T.  ) ;
   //       ID "btn_add" RESOURCE ::oRes

   DEFINE MODEL oModMonedas ;
          STRUCT ::rMonedas:Struct() ;
          DATA   ::rMonedas:GetData()
   
   DEFINE LISTBOX oLBoxMon ;
          MODEL oModMonedas ;
          OF oBoxData

   oLBoxMon:lBar  := .f.

   oLBoxMon:Active() 

//   oLBoxMon:bNew  := {|oModel| moneda_edit( oForm, oMonWnd, oModMonedas, .T. /*lNew*/ ) }
//   oLBoxMon:bEdit := {|oModMonedas| moneda_edit( oForm, oMonWnd, oModMonedas, .F. /*lNew*/ ) } 

   /* Desactivamos seleccion de linea */
   oModMonedas:oTreeView:bRow_Activated := nil

   /* Columna Código */
   #define __CODIGO   2
   oCol := oModMonedas:aCol[__CODIGO] // Codigo
   oCol:oRenderer:SetEditable( .T. )
   oCol:oRenderer:bEdited := {|oSender, path, uVal, aIter|;
                               __EditMoneda( oForm, oSender, path, uVal, oModMonedas:aIter,;
                                          oModMonedas:oLbx, oModMonedas:oTreeView, __CODIGO )  }
   oCol:oRenderer:SetColumn( oCol )

   /* Columna Nombre */
   #define __NOMBRE   3
   oCol := oModMonedas:aCol[__NOMBRE] // Codigo
   oCol:oRenderer:SetEditable( .T. )
   oCol:oRenderer:bEdited := {|oSender, path, uVal, aIter|;
                               __EditMoneda( oForm, oSender, path, uVal, oModMonedas:aIter,;
                                          oModMonedas:oLbx, oModMonedas:oTreeView, __NOMBRE )  }
   oCol:oRenderer:SetColumn( oCol )

   /* Columna Activo */
   #define __ACTIVO   4
   oCol := oModMonedas:aCol[__ACTIVO] // Codigo
   //oCol:oRenderer:SetEditable( .T. )
   oCol:oRenderer:bAction := {|oSender, path, uVal, aIter|;
                               __EditMoneda( oForm, oSender, path, uVal, oModMonedas:aIter,;
                                          oModMonedas:oLbx, oModMonedas:oTreeView, __ACTIVO )  }
   oCol:oRenderer:SetColumn( oCol )   

   ACTIVATE WINDOW oMonWnd MODAL

return



procedure moneda_edit( oForm, oMonWnd, oModel, lNew )
   local oWnd, oRes, oImgBanner
   local oMonForm, hData

   default lNew := .T.

   SET PUBLIC oMonForm

   oMonForm:lForce   := .F.
   oMonForm:lClose   := .F.     //Bandera para indicar cierre
   oMonForm:oModel   := oModel
   oMonForm:rSession := ::rSession
   oMonForm:lNew     := lNew

   if lNew

      oMonForm:cCodigo  := ""
      oMonForm:cNombre  := ""
      oMonForm:lActivo  := .t.
   else

      oMonForm:cCodigo  := oModel:GetCol( 2 )
      oMonForm:cNombre  := oModel:GetCol( 3 )
      oMonForm:lActivo  := oModel:GetCol( 4 )
   endif

   oMonForm:rMoneda := ::oGEmpresa:GetMoneda( {"codigo"=> oMonForm:cCodigo} )

//View( oMonForm:rMoneda )

   hData := oMonForm:rMoneda:Data()

//   oMonForm:cNombreC  := hData["nombre_corto"]
//   oMonForm:cCedula   := hData["cedula"]

   SET RESOURCES oRes FROM FILE oTPuy:cResources+"mae_moneda.ui"

   DEFINE WINDOW oMonForm:oWnd TITLE "Pruebas" SIZE 650,350 ;
          OF oMonWnd ;
          ID "window1" RESOURCE oRes


      DEFINE IMAGE oMonForm:oImgBanner ID "img_banner" RESOURCE oRes
      oMonForm:oImgBanner:Adjust(900)

      DEFINE IMAGE oMonForm:oImgLogo   ID "img_logo"   RESOURCE oRes
      oMonForm:oImgLogo:Adjust(60)
/*
      DEFINE ENTRY oMonForm:oEntCodigo VAR oMonForm:cCodigo ;
             VALID iif( oMonForm:lClose, .T., __ValidaCodigo( oMonForm:oEntCodigo, oMonForm ) ) ;
             ID "ent_codigo" RESOURCE oRes

      DEFINE ENTRY oMonForm:oEntNombre VAR oMonForm:cNombre ID "ent_nombre" RESOURCE oRes

      DEFINE ENTRY oMonForm:oEntNombreC VAR oMonForm:cNombreC ID "ent_nombre_corto" RESOURCE oRes

      DEFINE ENTRY oMonForm:oEntCedula VAR oMonForm:cCedula ;
             VALID iif( oMonForm:lClose, .T., __ValidaCedula( oMonForm:oEntCedula ) ) ;
             ID "ent_cedula" RESOURCE oRes

      DEFINE ENTRY oMonForm:oEntRif    VAR oMonForm:cRif    ;
             VALID iif( oMonForm:lClose, .T., __ValidaRIF(oMonForm:oEntRif, oMonForm) ) ;
             ID "ent_rif"    RESOURCE oRes

      DEFINE ENTRY oMonForm:oEntMail   VAR oMonForm:cMail   ;
             VALID iif( oMonForm:lClose, .T., __ValidaEmail( oMonForm:oEntMail ) ) ;
             ID "ent_mail"   RESOURCE oRes

      DEFINE ENTRY oMonForm:oEntTlf    VAR oMonForm:cTlf    ;
             VALID iif( oMonForm:lClose, .T., __ValidaTlf( oMonForm:oEntTlf ) ) ;
             ID "ent_tlf"    RESOURCE oRes

      DEFINE TEXTVIEW oMonForm:oVTDir  VAR oMonForm:cDir    ID "tv_dir"     RESOURCE oRes
*/
//      DEFINE BUTTON oMonForm:oBtnSave   ACTION __MaeMonSave( oMonForm ) ID "btn_save" RESOURCE oRes

      DEFINE BUTTON oMonForm:oBtnCancel ACTION ( oMonForm:lClose := .T., oMonForm:oWnd:End() ) ;
             ID "btn_cancel" RESOURCE oRes

   ACTIVATE WINDOW oMonForm:oWnd MODAL //VALID __MaeMonExit( oMonForm )

return
*/


procedure __EditMoneda( oForm, oSender, cPath, uVal, aIter, oModel, oTreeView, nCol )
   local pNextCol, pPath, uPrevio

   //-  ignoramos la edición si el documento esta anulado o cerrado.
//   if ::cComboEstado = "Anulada" .or. ::cComboEstado = "Cerrada" 
//      return 
//   endif

   if nCol=__ACTIVO
      __SetValue( oForm, oTreeView, oModel, aIter, nCol, uVal, cPath )
      oTreeView:SetPosCol( aIter, __ACTIVO, .f. )
      return
   endif

   if empty( uVal ) ; return ; endif

   uPrevio := oTreeView:GetAutoValue( nCol )

   if nCol=__CODIGO
      uVal := LEFT( ALLTRIM(UPPER( uVal )), 4 )
   endif

   //if nCol=__CODIGO
      __SetValue( oForm, oTreeView, oModel, aIter, nCol, uVal, cPath, uPrevio )
//      __Productos( oForm, uVal, oModel, nCol, oTreeView, aIter )
      oTreeView:SetPosCol( aIter, nCol, .f. )

//-- Evaluar si ya estan todos los datos, verificar que no hay nada repetido y proceder
//   a almacenar. (RIGC Sept 23 - 2025)

      return
   //endif

//   if Empty( oTreeView:GetAutoValue( __CODIGO ) )
      //View("No deberia poder editar sin concepto definido")
//      oTreeView:SetPosCol( aIter, __CODIGO, .f. )
//      return
//   endif

return



PROCEDURE __SetValue( oForm, oTreeView, oModel, aIter, nCol, uValue, cPath, uPrevio  )
   local nMonto, nDescuento, nIvaPorcen, nIvaMonto:= 0
   local pPath, hData := hb_hash(), hResult 

   if oTreeView:IsGetSelected( aIter )
      
      if nCol= __ACTIVO
         pPath := gtk_tree_path_new_from_string( cPath )
         uValue := !( oTreeView:GetValue( nCol, "Boolean", pPath , @aIter ) )
      endif

      oModel:Set( aIter, nCol, uValue )

      hData["id"]     := oTreeView:GetAutoValue( 1 )
      hData["codigo"] := oTreeView:GetAutoValue( 2 )
      hData["nombre"] := oTreeView:GetAutoValue( 3 )
      hData["activo"] := oTreeView:GetAutoValue( 4 )

      if Empty(hData["id"]) 
         if !Empty( hData["codigo"] ) .and. ;
            !Empty( hData["nombre"] ) .and. hb_isLogical( hData["activo"] )

            ::rMoneda := ::oParentForm:oGEmpresa:GetMoneda( {"codigo" => ''} )

            hResult := ::rMoneda:SetData( hData )
            if !hResult["return"]
               MsgAlert( hResult["message"] )
               return
            endif
            if !::rMoneda:Save() 
               MsgAlert( "Se presenta problema para registrar los datos.", "Atención" )
               return
            endif
         endif
      else
//         View("editando registro... deberíase")
         if nCol = 2
            ::rMoneda := ::oParentForm:oGEmpresa:GetMoneda( {"codigo"=> uPrevio } )
         else
            ::rMoneda := ::oParentForm:oGEmpresa:GetMoneda( {"codigo"=> hData["codigo"] } )
         endif

         if !hb_isObject( ::rMoneda )
            return
         endif
         ::rMoneda:SetData( hData )
         if !::rMoneda:Save() 
            MsgAlert( "Se presenta problema para actualizar los datos.", "Atención" )
            return
         endif
         
      endif

   endif
RETURN



Procedure __BtnNewMon( oForm, oModMonedas, oLBoxMon )
   local aIter := ARRAY(4)

   oModMonedas:oTreeView:SetFocus()
   oModMonedas:GoTop()

   APPEND LIST_STORE oModMonedas:oLbx ITER aIter ;
      VALUES "", "", "", .F.
   
  oModMonedas:oTreeView:SetFocus()
  oModMonedas:GoBottom()

RETURN
//eof
