/* vta_clientes.xbs
 *
 */

#include "tpy_xbs.ch"

procedure vta_clientes( oForm, oWndParent, oEntParent, cCodCliente, cFiltro, cDocumento )

   local oCliWnd, oRes, oImgBanner, oImageLogo, oBoxData
   local oLabTitulo, cLabTitulo := "Clientes"
   local rVentas, rClientes, oModClientes, oLBoxCli, hParam

   default cCodCliente to ""
   default cFiltro     to ""
   default cDocumento  to ""

   if !Empty(cDocumento) .or. !Empty(cFiltro)
      hParam := hb_hash()
   endif

   if !Empty( cDocumento )
      hParam["documento"] := cDocumento
   endif
   if !Empty( cFiltro )
      hParam[ "filtro" ] := cFiltro
   endif

   rVentas := ::oGEmpresa:SetModulo("Ventas")
   rClientes := rVentas:Clientes( hParam )

   if hb_isNIL(rClientes)
      MsgStop("???")
      return
   endif


   SET RESOURCES oRes FROM FILE oTPuy:cResources+"vta_listbox.ui"


   DEFINE WINDOW oCliWnd ;
          TITLE "Fiscalius. Factura" ;
          SIZE 700,400 ;
          ID "window1" RESOURCE oRes

   DEFINE LABEL oLabTitulo TEXT cLabTitulo ;
          ID "lab_title" RESOURCE oRes

   DEFINE IMAGE oImgBanner ;
          FILE oTPuy:cImages+"banner_02.png"; 
          ID "image1" RESOURCE oRes
          oImgBanner:Adjust(900)

   DEFINE IMAGE oImgLogo ;
          FILE oTPuy:cImages+"fiscalius_logo_02.png";
          ID "image2" RESOURCE oRes
          oImgLogo:Adjust(60)

   DEFINE BOX oBoxData ID "boxdata" RESOURCE oRes


   DEFINE MODEL oModClientes ;
          STRUCT rClientes:Struct() ;
          DATA   rClientes:GetData()
   
   DEFINE LISTBOX oLBoxCli ;
          MODEL oModClientes ;
          OF oBoxData

   oLBoxCli:lBar  := .f.

   if hb_isObject( oEntParent )
      oLBoxCli:bEdit := {|oModel| (cCodCliente := oModel:GetCol(1),; 
                                   iif( !hb_isObject(oWndParent),                ;
                                         .T.,                                     ;
                                         oEntParent:setText( ALLTRIM(cCodCliente)+" - "+;
                                                             oModel:GetCol(3) )), ;
                                   oCliWnd:End() ) }
   else 
      oLBoxCli:bNew  := {|oModel| vtc_edit( oForm, oCliWnd, oModClientes, rVentas, .T. /*lNew*/ ) }
      oLBoxCli:bEdit := {|oModClientes| vtc_edit( oForm, oCliWnd, oModClientes, rVentas, .F. /*lNew*/ ) }
   endif

   ACTIVATE WINDOW oCliWnd MODAL //OF oWndParent

return



procedure vtc_edit( oForm, oCliWnd, oModel, rVentas, lNew )
   local oWnd, oRes, oImgBanner
//   local oImgLogo, oEntCodigo, cCodigo, oEntNombre, cNombre
//   local oEntRif, cRif, oEntMail, cMail, oEntTlf, cTlf
//   local oVtDir, cDir, oBtnSave, oBtnCancel
   local oCliForm, rCliente, hData

   default lNew := .T.

   SET PUBLIC oCliForm

   oCliForm:lForce := .F.
   oCliForm:oModel := oModel

   if lNew

      oCliForm:cCodigo  := ""
      oCliForm:cNombre  := ""
      oCliForm:cRif     := ""
      oCliForm:cDir     := ""
      oCliForm:cTlf     := ""
      oCliForm:cMail    := ""
      oCliForm:cCedula  := ""
   else

      oCliForm:cCodigo  := oModel:GetCol( 2 )
      oCliForm:cNombre  := oModel:GetCol( 3 )
      oCliForm:cRif     := oModel:GetCol( 4 )
      oCliForm:cDir     := oModel:GetCol( 5 )
      oCliForm:cTlf     := oModel:GetCol( 6 )
      oCliForm:cMail    := oModel:GetCol( 7 )
   endif

   oCliForm:rCliente := rVentas:Cliente( {"codigo"=> oCliForm:cCodigo} )

   hData := oCliForm:rCliente:Data()
   oCliForm:cNombreC  := hData["nombre_corto"]
   oCliForm:cCedula   := hData["cedula"]

   SET RESOURCES oRes FROM FILE oTPuy:cResources+"vta_clientes.ui"

   DEFINE WINDOW oCliForm:oWnd TITLE "Pruebas" SIZE 650,350 ;
          OF oCliWnd ;
          ID "window1" RESOURCE oRes

      DEFINE IMAGE oCliForm:oImgBanner ID "img_banner" RESOURCE oRes
      oCliForm:oImgBanner:Adjust(900)

      DEFINE IMAGE oCliForm:oImgLogo   ID "img_logo"   RESOURCE oRes
      oCliForm:oImgLogo:Adjust(60)

      DEFINE ENTRY oCliForm:oEntCodigo VAR oCliForm:cCodigo ID "ent_codigo" RESOURCE oRes

      DEFINE ENTRY oCliForm:oEntNombre VAR oCliForm:cNombre ID "ent_nombre" RESOURCE oRes

      DEFINE ENTRY oCliForm:oEntNombreC VAR oCliForm:cNombreC ID "ent_nombre_corto" RESOURCE oRes

      DEFINE ENTRY oCliForm:oEntCedula VAR oCliForm:cCedula ID "ent_cedula" RESOURCE oRes

      DEFINE ENTRY oCliForm:oEntRif    VAR oCliForm:cRif    ID "ent_rif"    RESOURCE oRes

      DEFINE ENTRY oCliForm:oEntMail   VAR oCliForm:cMail   ID "ent_mail"   RESOURCE oRes

      DEFINE ENTRY oCliForm:oEntTlf    VAR oCliForm:cTlf    ID "ent_tlf"    RESOURCE oRes

      DEFINE TEXTVIEW oCliForm:oVTDir  VAR oCliForm:cDir    ID "tv_dir"     RESOURCE oRes

      DEFINE BUTTON oCliForm:oBtnSave   ACTION __VtaCliSave( oCliForm ) ID "btn_save" RESOURCE oRes

      DEFINE BUTTON oCliForm:oBtnCancel ACTION oCliForm:oWnd:End() ID "btn_cancel" RESOURCE oRes

   ACTIVATE WINDOW oCliForm:oWnd MODAL VALID __VtaCliExit( oCliForm )

return



Procedure __VtaCliSave( oForm )
   local hData, uWidget, uResp, aIter, lNew

   lNew := ::rCliente:isNew()

   // Guardar los datos del cliente
   hData := ::rCliente:Data()
   ::rCliente:SetData( { "codigo"       => ::cCodigo,  ;
                         "nombre"       => ::cNombre,  ;
                         "nombre_corto" => ::cNombreC, ;
                         "rif"          => ::cRif,     ;
                         "email"        => ::cMail,    ;
                         "telefono"     => ::cTlf,     ;
                         "direccion"    => ::cDir,     ;
                         "cedula"       => ::cCedula   ;
                       } )

   uResp := ::rCliente:Save()

   if !(ValType( uResp ) = "L" .and. uResp = .T.)
      MsgAlert("No se pudo guardar el cliente.", "Error")
      return
   endif

   hData := ::rCliente:Data()
//View( hb_valtoexp(hData) )

   // Verificar si es un cliente nuevo (no hay selección en el modelo)
   if lNew 
      // Cliente nuevo: añadir una nueva fila al modelo
      aIter := ARRAY(4)
      APPEND LIST_STORE ::oModel:oLbx ITER aIter ;
             VALUES hData["id"], ;
                    hData["codigo"], ;
                    hData["nombre"], ;
                    hData["rif"], ;
                    hData["direccion"], ;
                    hData["telefono"], ;
                    hData["email"], ;
                    hData["nombre_corto"], ;
                    hData["cedula"]
      // Establecer el cursor en la nueva fila
      gtk_tree_view_set_cursor( ::oModel:oTreeView:pWidget, ::oModel:oTreeView:GetPath( aIter ), NIL, .F. )
   else
      // Cliente existente: actualizar la fila seleccionada
      ::oModel:SetValue( 2, hData["codigo"] )
      ::oModel:SetValue( 3, hData["nombre"] )
      ::oModel:SetValue( 4, hData["rif"] )
      ::oModel:SetValue( 5, hData["direccion"] )
      ::oModel:SetValue( 6, hData["telefono"] )
      ::oModel:SetValue( 7, hData["email"] )
      ::oModel:SetValue( 8, hData["nombre_corto"] ) // Añadir nombre_corto
      ::oModel:SetValue( 9, hData["cedula"] )       // Añadir cedula
   endif

   // Actualizar los campos del formulario
/*
   ::oEntCodigo:SetValue( hData["codigo"] )
   ::oEntNombre:SetValue( hData["nombre"] )
   ::oEntNombreC:SetValue( hData["nombre_corto"] )
   ::oEntCedula:SetValue( hb_ntos(hData["cedula"]) )
   ::oEntRif:SetValue( hData["rif"] )
   ::oEntMail:SetValue( hData["email"] )
   ::oEntTlf:SetValue( hData["telefono"] )
   ::oVTDir:SetValue( hData["direccion"] )
*/
   ::lForce := .T.
   ::oWnd:End()

return


Function __VtaCliExit( oForm )

//View( ::lForce )
  if ::lForce; return .T. ; endif

  if MsgNoYes("¿Desea salir y descartar los cambios?", "Atención.")
     return .T.
  endif

return .F.

//eof
